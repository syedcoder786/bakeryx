{"version":3,"sources":["reducers/categoryReducers.js","reducers/index.js","actions/types.js","store.js","components/dashboard/Header.js","actions/categoryActions.js","components/Cakes.js","components/category/Cake.js","components/Roles.js","components/category/Role.js","components/Cookies.js","components/category/Cookie.js","components/AddCake.js","actions/recordActions.js","components/dashboard/Dashboard.js","components/dashboard/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","cakes","cakeLoading","cake","roles","roleLoading","role","cookies","cookieLoading","cookie","combineReducers","categories","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Header","className","href","src","width","height","alt","class","id","placeholder","value","Component","fetchCake","dispatch","axios","get","then","data","fetchRole","fetchCookie","Cakes","onClick","e","console","log","target","window","location","assign","this","props","cakeItems","map","_id","img_path","name","discp","price","percent","connect","Cake","msg","onClickme","setState","findCake","match","params","post","Roles","roleItems","Role","findRole","Cookies","cookieItems","Cookie","findCookie","AddCake","rname","onChange","onSubmit","preventDefault","record","addrecord","method","url","res","Dashboard","exact","path","component","Footer","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0316b3b9.chunk.js","sourcesContent":["import { FETCH_CAKE, CAKE_LOADING, CAKE_LOADED, GET_CAKE, FETCH_ROLE, ROLE_LOADING, ROLE_LOADED, GET_ROLE, FETCH_COOKIE, COOKIE_LOADING, COOKIE_LOADED, GET_COOKIE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    cakes:[],\r\n    cakeLoading: false,\r\n    cake:[],\r\n    roles:[],\r\n    roleLoading: false,\r\n    role:[],\r\n    cookies:[],\r\n    cookieLoading: false,\r\n    cookie:[],\r\n}\r\nexport default function(state=initialState,action){\r\n    switch(action.type){\r\n        case CAKE_LOADING:\r\n        return{\r\n            ...state,\r\n            cakeLoading:true\r\n            }\r\n        case CAKE_LOADED:\r\n        return{\r\n            ...state,\r\n            cakeLoading:false\r\n            }\r\n        case FETCH_CAKE:\r\n        return {\r\n            ...state,\r\n            cakes:action.payload\r\n        };\r\n        case GET_CAKE:\r\n        return {\r\n            ...state,\r\n            cake:action.payload\r\n        };\r\n        case ROLE_LOADING:\r\n            return{\r\n                ...state,\r\n                roleLoading:true\r\n                }\r\n            case ROLE_LOADED:\r\n            return{\r\n                ...state,\r\n                roleLoading:false\r\n                }\r\n            case FETCH_ROLE:\r\n            return {\r\n                ...state,\r\n                roles:action.payload\r\n            };\r\n            case GET_ROLE:\r\n            return {\r\n                ...state,\r\n                role:action.payload\r\n            };\r\n            case COOKIE_LOADING:\r\n            return{\r\n                ...state,\r\n                cookieLoading:true\r\n                }\r\n            case COOKIE_LOADED:\r\n            return{\r\n                ...state,\r\n                cookieLoading:false\r\n                }\r\n            case FETCH_COOKIE:\r\n            return {\r\n                ...state,\r\n                cookies:action.payload\r\n            };\r\n            case GET_COOKIE:\r\n            return {\r\n                ...state,\r\n                cookie:action.payload\r\n            };\r\n        default:\r\n        return state;\r\n    };\r\n}","import {combineReducers} from 'redux';\r\nimport categoryReducer from './categoryReducers';\r\n\r\nexport default combineReducers({\r\n    categories:categoryReducer\r\n});","export const FETCH_CAKE='FETCH_CAKE';\r\nexport const CAKE_LOADING='CAKE_LOADING';\r\nexport const CAKE_LOADED='CAKE_LOADED';\r\nexport const GET_CAKE='GET_CAKE';\r\nexport const FETCH_ROLE='FETCH_ROLE';\r\nexport const ROLE_LOADING='ROLE_LOADING';\r\nexport const ROLE_LOADED='ROLE_LOADED';\r\nexport const GET_ROLE='GET_ROLE';\r\nexport const FETCH_COOKIE='FETCH_COOKIE';\r\nexport const COOKIE_LOADING='COOKIE_LOADING';\r\nexport const COOKIE_LOADED='COOKIE_LOADED';\r\nexport const GET_COOKIE='GET_COOKIE';\r\nexport const ADD_RECORD='ADD_RECORD';\r\n","import {createStore,applyMiddleware,compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState={};\r\nconst middleware=[thunk];\r\n\r\n  \r\n\r\nconst store=createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n);\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport '../../styles/header.css'\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n\r\n      return (\r\n          <div>\r\n            <header>\r\n                <div className=\"container\">\r\n                    <div className=\"lefdiv\">\r\n                        <a href=\"/\"><img src=\"./bbbb.png\" width=\"40%\" height=\"20%\" alt=\"hii\" href=\"/\"/></a>\r\n                    </div>\r\n                    <div class=\"rigdiv\">\r\n                    <div class=\"frm\">\r\n                        <p class=\"anch\">Search here for any queries</p>\r\n                        <div id=\"inpform\">\r\n                        <form><input type=\"name\" id=\"name\" placeholder=\"Search...\" /><input type=\"submit\" id=\"submit\" value=\"Search\" /></form>\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t   <li><a href=\"/\" class=\"anch\">Language</a></li>\r\n\t\t\t\t\t   <li><a href=\"/\" class=\"anch\">Content</a></li>\r\n\t\t\t\t\t   <li><a href=\"/\" class=\"anch\">Straight</a></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t    </div>\r\n\t\t        </div>\r\n\t        </header>\r\n            <section class=\"branding\">\r\n                <div class=\"containercat\">\r\n                    <ul id=\"cat\">\r\n                        <li><a href=\"/\" class=\"anch2\">Cakes</a></li>\r\n                        <li><a href=\"/cookies\" class=\"anch2\">Cookies</a></li>\r\n                        <li><a href=\"/roles\" class=\"anch2\">Rolls</a></li>\r\n                    </ul>\r\n                </div>\r\n            </section>\r\n\r\n            <div>\r\n                <section>\r\n                    <h1 class=\"best\">Best of June</h1>\r\n                </section>\r\n            </div>\r\n\r\n    </div>\r\n                \r\n    )\r\n    \r\n    }\r\n}\r\n\r\n// const mapStateToProps=state=>({\r\n//     // posts:state.post.items,\r\n//     // postLoading:state.post.postLoading,\r\n//     auth:state.auth\r\n// });\r\n\r\nexport default Header;\r\n","import { FETCH_CAKE, CAKE_LOADING, CAKE_LOADED, GET_CAKE, ROLE_LOADING, ROLE_LOADED, FETCH_ROLE, GET_ROLE, FETCH_COOKIE, COOKIE_LOADING, COOKIE_LOADED, GET_COOKIE, } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const fetchCake = () => dispatch => {\r\n    dispatch({ type:CAKE_LOADING })\r\n    axios.get('/api/fetchCake')\r\n    // .then(res => res.json()) \r\n      .then(cakes => {\r\n            dispatch({ type:CAKE_LOADED })\r\n            dispatch({\r\n                type:FETCH_CAKE,\r\n                payload:cakes.data\r\n            })\r\n      })\r\n      \r\n};\r\n\r\n\r\nexport const findCake = (id) => (dispatch) => {\r\n\r\n    axios.post('/api/findCake',id)\r\n      .then(cake =>{\r\n        console.log(cake.data)\r\n              dispatch({\r\n                type: GET_CAKE,\r\n                payload: cake.data\r\n              })\r\n      })\r\n            // .catch(error =>{\r\n            //   dispatch({\r\n            //     type: ERROR_CATEGORY,\r\n            //     payload: error.response.data\r\n            //   })\r\n            // })\r\n            // console.log(post.data)\r\n  };\r\n\r\n  \r\nexport const fetchRole = () => dispatch => {\r\n  dispatch({ type:ROLE_LOADING })\r\n  axios.get('/api/fetchRole')\r\n  // .then(res => res.json()) \r\n    .then(roles => {\r\n          dispatch({ type:ROLE_LOADED })\r\n          dispatch({\r\n              type:FETCH_ROLE,\r\n              payload:roles.data\r\n          })\r\n    })\r\n    \r\n};\r\n\r\n\r\nexport const findRole = (id) => (dispatch) => {\r\n\r\n  axios.post('/api/findRole',id)\r\n    .then(role =>{\r\n      console.log(role.data)\r\n            dispatch({\r\n              type: GET_ROLE,\r\n              payload: role.data\r\n            })\r\n    })\r\n          // .catch(error =>{\r\n          //   dispatch({\r\n          //     type: ERROR_CATEGORY,\r\n          //     payload: error.response.data\r\n          //   })\r\n          // })\r\n          // console.log(post.data)\r\n};\r\n\r\nexport const fetchCookie = () => dispatch => {\r\n  dispatch({ type:COOKIE_LOADING })\r\n  axios.get('/api/fetchCookie')\r\n  // .then(res => res.json()) \r\n    .then(cookies => {\r\n          dispatch({ type:COOKIE_LOADED })\r\n          dispatch({\r\n              type:FETCH_COOKIE,\r\n              payload:cookies.data\r\n          })\r\n    })\r\n    \r\n};\r\n\r\n\r\nexport const findCookie = (id) => (dispatch) => {\r\n\r\n  axios.post('/api/findCookie',id)\r\n    .then(cookie =>{\r\n      console.log(cookie.data)\r\n            dispatch({\r\n              type: GET_COOKIE,\r\n              payload: cookie.data\r\n            })\r\n    })\r\n          // .catch(error =>{\r\n          //   dispatch({\r\n          //     type: ERROR_CATEGORY,\r\n          //     payload: error.response.data\r\n          //   })\r\n          // })\r\n          // console.log(post.data)\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport '../styles/header.css';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCake } from '../actions/categoryActions';\r\nclass Cakes extends Component {\r\n\r\n\r\n  componentDidMount(){\r\n    this.props.fetchCake();\r\n  }\r\n\r\n  onClick = (e) => {\r\n    // const categoryid = e.target.value;\r\n    console.log(e.target.id)\r\n    // this.props.fetchSubCategories({ id:categoryid });\r\n    window.location.assign(\"/cake/\"+e.target.id)\r\n  }\r\n\r\n  render() {\r\n\r\n    const cakeItems = this.props.cakes.map(({ _id, img_path, name, discp, price, percent }) => (\r\n      <div className=\"box\" id={_id} onClick={this.onClick}>\r\n          <img src = {img_path} alt = \"hi\" id={_id} onClick={this.onClick}></img>\r\n          <h5 id={_id} onClick={this.onClick}>{name}</h5>\r\n          <p id={_id} onClick={this.onClick}>{discp}</p>\r\n          <div id=\"btm\">\r\n            <div id=\"pl\">{price}</div>\r\n            <div id=\"pr\">{percent}</div>\r\n          </div>\r\n      </div>\r\n    ));\r\n      \r\n      return (\r\n      <div>\r\n      {this.props.cakeLoading?(<h2><center>Loading...</center></h2>):(\r\n        <section id=\"boxes\">\r\n        <div className=\"containerbox\">\r\n          {cakeItems}r\n        </div>\r\n      </section>\r\n      )}\r\n      \r\n  \r\n      {/* <footer>\r\n        <p>About us</p>\r\n      </footer> */}\r\n  \r\n  \r\n        </div>\r\n      )\r\n    \r\n}\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    cakes:state.categories.cakes,\r\n    cakeLoading:state.categories.cakeLoading,\r\n    // auth:state.auth\r\n    // newPost:state.post.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchCake })(Cakes);\r\n// export default Cake;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/product.css';\r\nimport { connect } from 'react-redux';\r\nimport { findCake, fetchCake } from '../../actions/categoryActions';\r\nclass Cake extends Component {\r\n\r\nstate = {\r\n    msg:false\r\n}\r\n\r\ncomponentDidMount(){\r\n    // console.log(this.props.match.params.id)\r\n    this.props.findCake({id:this.props.match.params.id})\r\n    this.props.fetchCake();\r\n  }\r\n  \r\n  onClick = (e) => {\r\n    // const categoryid = e.target.value;\r\n    console.log(e.target.id)\r\n    // this.props.fetchSubCategories({ id:categoryid });\r\n    window.location.assign(\"/cake/\"+e.target.id)\r\n  }\r\n\r\n  onClickme = (e) => {\r\n    this.setState({ msg: true })\r\n  }\r\n\r\n  render() {\r\n\r\n    const cakeItems = this.props.cakes.map(({ _id, img_path, name, discp, price, percent }) => (\r\n      <div>\r\n      <div className=\"boxp\" id={_id} onClick={this.onClick}>\r\n          <img src = {img_path} alt = \"hi\" id={_id} onClick={this.onClick}></img>\r\n          <h5 id={_id} onClick={this.onClick}>{name}</h5>\r\n          <p id={_id} onClick={this.onClick}>{discp}</p>\r\n          <div id=\"btm\">\r\n            <div id=\"pl\">{price}</div>\r\n            <div id=\"pr\">{percent}</div>\r\n          </div>\r\n      </div>\r\n      {/* <br/> */}\r\n      </div>\r\n    ));\r\n      \r\n    if(this.state.msg) {\r\n      return (\r\n      <div>\r\n            <div class=\"containerp\">\r\n                <div class=\"left\">\r\n                    <img src={this.props.cake.img_path} alt=\"hii\" />\r\n                </div>\r\n                <div class=\"right\">\r\n                    <img src=\"../bg1.jpg\" alt=\"hii\" class=\"sideimg\" />\r\n                    <img src=\"../bg2.jfif\" alt=\"hii\" class=\"sideimg\" />\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"containerp\">\r\n                <h6>{this.props.cake.name}</h6>\r\n                <p>{this.props.cake.discp}</p>\r\n                <p>{this.props.cake.price} {this.props.cake.percent}</p>\r\n            </div>\r\n            <div class=\"containerp\">\r\n                <h5>Related Products</h5>\r\n            </div>\r\n            {/* {this.props.cakeLoading?(<h2><center>Loading...</center></h2>):( */}\r\n            <div class=\"containerp\">\r\n            <section id=\"boxes\">\r\n                <div className=\"containerboxp\">\r\n                {cakeItems}r\n                </div>\r\n            </section>\r\n            </div>\r\n            {/* )} */}\r\n      \r\n  \r\n      {/* <footer>\r\n        <p>About us</p>\r\n      </footer> */}\r\n  \r\n  \r\n        </div>\r\n      )\r\n    }else{\r\n        return(\r\n            <div>\r\n                <br/><br/><center><button onClick={this.onClickme} class=\"newbtn\">I am 18 years and older</button></center><br/><br/><br/><br/><br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    cake:state.categories.cake,\r\n    cakes:state.categories.cakes,\r\n    // cakeLoading:state.categories.cakeLoading,\r\n    // auth:state.auth\r\n    // newPost:state.post.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchCake, findCake })(Cake);\r\n// export default Cake;\r\n","import React, { Component } from 'react';\r\nimport '../styles/header.css';\r\nimport { connect } from 'react-redux';\r\nimport { fetchRole } from '../actions/categoryActions';\r\nclass Roles extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.fetchRole();\r\n  }\r\n\r\n  onClick = (e) => {\r\n    // const categoryid = e.target.value;\r\n    console.log(e.target.id)\r\n    // this.props.fetchSubCategories({ id:categoryid });\r\n    window.location.assign(\"/role/\"+e.target.id)\r\n  }\r\n\r\n  render() {\r\n\r\n    const roleItems = this.props.roles.map(({ _id, img_path, name, discp, price, percent }) => (\r\n      <div className=\"box\" id={_id} onClick={this.onClick}>\r\n          <img src = {img_path} alt = \"hi\" id={_id} onClick={this.onClick}></img>\r\n          <h5 id={_id} onClick={this.onClick}>{name}</h5>\r\n          <p id={_id} onClick={this.onClick}>{discp}</p>\r\n          <div id=\"btm\" >\r\n            <div id=\"pl\">{price}</div>\r\n            <div id=\"pr\">{percent}</div>\r\n          </div>\r\n      </div>\r\n    ));\r\n      \r\n      return (\r\n      <div>\r\n      {this.props.roleLoading?(<h2><center>Loading...</center></h2>):(\r\n        <section id=\"boxes\">\r\n        <div className=\"containerbox\">\r\n          {roleItems}r\n        </div>\r\n      </section>\r\n      )}\r\n      \r\n  \r\n      {/* <footer>\r\n        <p>About us</p>\r\n      </footer> */}\r\n  \r\n  \r\n        </div>\r\n      )\r\n    \r\n}\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    roles:state.categories.roles,\r\n    roleLoading:state.categories.roleLoading,\r\n    // auth:state.auth\r\n    // newPost:state.post.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchRole })(Roles);\r\n// export default Cake;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/product.css';\r\nimport { connect } from 'react-redux';\r\nimport { findRole, fetchRole } from '../../actions/categoryActions';\r\nclass Role extends Component {\r\n\r\nstate = {\r\n    msg:false\r\n}\r\n\r\ncomponentDidMount(){\r\n    // console.log(this.props.match.params.id)\r\n    this.props.findRole({id:this.props.match.params.id})\r\n    this.props.fetchRole();\r\n  }\r\n  \r\n  onClick = (e) => {\r\n    // const categoryid = e.target.value;\r\n    console.log(e.target.id)\r\n    // this.props.fetchSubCategories({ id:categoryid });\r\n    window.location.assign(\"/role/\"+e.target.id)\r\n  }\r\n\r\n  onClickme = (e) => {\r\n    this.setState({ msg: true })\r\n  }\r\n\r\n  render() {\r\n\r\n    const roleItems = this.props.roles.map(({ _id, img_path, name, discp, price, percent }) => (\r\n      <div className=\"boxp\" id={_id} onClick={this.onClick}>\r\n          <img src = {img_path} alt = \"hi\" id={_id} onClick={this.onClick}></img>\r\n          <h5 id={_id} onClick={this.onClick}>{name}</h5>\r\n          <p id={_id} onClick={this.onClick}>{discp}</p>\r\n          <div id=\"btm\">\r\n            <div id=\"pl\">{price}</div>\r\n            <div id=\"pr\">{percent}</div>\r\n          </div>\r\n      </div>\r\n    ));\r\n      \r\n    if(this.state.msg) {\r\n      return (\r\n      <div>\r\n            <div class=\"containerp\">\r\n                <div class=\"left\">\r\n                    <img src={this.props.role.img_path} alt=\"hii\" />\r\n                </div>\r\n                <div class=\"right\">\r\n                    <img src=\"../bg1.jpg\" alt=\"hii\" class=\"sideimg\" />\r\n                    <img src=\"../bg2.jfif\" alt=\"hii\" class=\"sideimg\" />\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"containerp\">\r\n                <h6>{this.props.role.name}</h6>\r\n                <p>{this.props.role.discp}</p>\r\n                <p>{this.props.role.price} {this.props.role.percent}</p>\r\n            </div>\r\n            <div class=\"containerp\">\r\n                <h4>Related Products</h4>\r\n            </div>\r\n            {/* {this.props.cakeLoading?(<h2><center>Loading...</center></h2>):( */}\r\n            <div class=\"containerp\">\r\n            <section id=\"boxes\">\r\n                <div className=\"containerboxp\">\r\n                {roleItems}r\n                </div>\r\n            </section>\r\n            </div>\r\n            {/* )} */}\r\n      \r\n  \r\n      {/* <footer>\r\n        <p>About us</p>\r\n      </footer> */}\r\n  \r\n  \r\n        </div>\r\n      )\r\n    }else{\r\n        return(\r\n            <div>\r\n                <br/><br/><center><button onClick={this.onClickme} class=\"newbtn\">I am 18 years and older</button></center><br/><br/><br/><br/><br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    role:state.categories.role,\r\n    roles:state.categories.roles,\r\n    // cakeLoading:state.categories.cakeLoading,\r\n    // auth:state.auth\r\n    // newPost:state.post.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchRole, findRole })(Role);\r\n// export default Cake;\r\n","import React, { Component } from 'react';\r\nimport '../styles/header.css';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCookie } from '../actions/categoryActions';\r\nclass Cookies extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.fetchCookie();\r\n  }\r\n\r\n  onClick = (e) => {\r\n    // const categoryid = e.target.value;\r\n    console.log(e.target.id)\r\n    // this.props.fetchSubCategories({ id:categoryid });\r\n    window.location.assign(\"/cookie/\"+e.target.id)\r\n  }\r\n\r\n  render() {\r\n\r\n    const cookieItems = this.props.cookies.map(({ _id, img_path, name, discp, price, percent }) => (\r\n      <div className=\"box\" id={_id} onClick={this.onClick}>\r\n          <img src = {img_path} alt = \"hi\" id={_id} onClick={this.onClick}></img>\r\n          <h5 id={_id} onClick={this.onClick}>{name}</h5>\r\n          <p id={_id} onClick={this.onClick}>{discp}</p>\r\n          <div id=\"btm\">\r\n            <div id=\"pl\">{price}</div>\r\n            <div id=\"pr\">{percent}</div>\r\n          </div>\r\n      </div>\r\n    ));\r\n      \r\n      return (\r\n      <div>\r\n      {this.props.cookieLoading?(<h2><center>Loading...</center></h2>):(\r\n        <section id=\"boxes\">\r\n        <div className=\"containerbox\">\r\n          {cookieItems}r\n        </div>\r\n      </section>\r\n      )}\r\n      \r\n  \r\n      {/* <footer>\r\n        <p>About us</p>\r\n      </footer> */}\r\n  \r\n  \r\n        </div>\r\n      )\r\n    \r\n}\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    cookies:state.categories.cookies,\r\n    cookieLoading:state.categories.cookieLoading,\r\n    // auth:state.auth\r\n    // newPost:state.post.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchCookie })(Cookies);\r\n// export default Cake;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/product.css';\r\nimport { connect } from 'react-redux';\r\nimport { findCookie, fetchCookie } from '../../actions/categoryActions';\r\nclass Cookie extends Component {\r\n\r\nstate = {\r\n    msg:false\r\n}\r\n\r\ncomponentDidMount(){\r\n    // console.log(this.props.match.params.id)\r\n    this.props.findCookie({id:this.props.match.params.id})\r\n    this.props.fetchCookie();\r\n  }\r\n  \r\n  onClick = (e) => {\r\n    // const categoryid = e.target.value;\r\n    console.log(e.target.id)\r\n    // this.props.fetchSubCategories({ id:categoryid });\r\n    window.location.assign(\"/cookie/\"+e.target.id)\r\n  }\r\n\r\n  onClickme = (e) => {\r\n    this.setState({ msg: true })\r\n  }\r\n\r\n  render() {\r\n\r\n    const cookieItems = this.props.cookies.map(({ _id, img_path, name, discp, price, percent }) => (\r\n      <div className=\"boxp\" id={_id} onClick={this.onClick}>\r\n          <img src = {img_path} alt = \"hi\" id={_id} onClick={this.onClick}></img>\r\n          <h5 id={_id} onClick={this.onClick}>{name}</h5>\r\n          <p id={_id} onClick={this.onClick}>{discp}</p>\r\n          <div id=\"btm\">\r\n            <div id=\"pl\">{price}</div>\r\n            <div id=\"pr\">{percent}</div>\r\n          </div>\r\n      </div>\r\n    ));\r\n      \r\n    if(this.state.msg) {\r\n      return (\r\n      <div>\r\n            <div class=\"containerp\">\r\n                <div class=\"left\">\r\n                    <img src={this.props.cookie.img_path} alt=\"hii\" />\r\n                </div>\r\n                <div class=\"right\">\r\n                    <img src=\"../bg1.jpg\" alt=\"hii\" class=\"sideimg\" />\r\n                    <img src=\"../bg2.jfif\" alt=\"hii\" class=\"sideimg\" />\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"containerp\">\r\n                <h6>{this.props.cookie.name}</h6>\r\n                <p>{this.props.cookie.discp}</p>\r\n                <p>{this.props.cookie.price} {this.props.cookie.percent}</p>\r\n            </div>\r\n            <div class=\"containerp\">\r\n                <h5>Related Products</h5>\r\n            </div>\r\n            {/* {this.props.cakeLoading?(<h2><center>Loading...</center></h2>):( */}\r\n            <div class=\"containerp\">\r\n            <section id=\"boxes\">\r\n                <div className=\"containerboxp\">\r\n                {cookieItems}r\n                </div>\r\n            </section>\r\n            </div>\r\n            {/* )} */}\r\n      \r\n  \r\n      {/* <footer>\r\n        <p>About us</p>\r\n      </footer> */}\r\n  \r\n  \r\n        </div>\r\n      )\r\n    }else{\r\n        return(\r\n            <div>\r\n                <br/><br/><center><button onClick={this.onClickme} class=\"newbtn\">I am 18 years and older</button></center><br/><br/><br/><br/><br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    cookie:state.categories.cookie,\r\n    cookies:state.categories.cookies,\r\n    // cakeLoading:state.categories.cakeLoading,\r\n    // auth:state.auth\r\n    // newPost:state.post.item\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchCookie, findCookie })(Cookie);\r\n// export default Cake;\r\n","import React, { Component } from 'react';\r\n// import '../styles/header.css';\r\nimport { connect } from 'react-redux';\r\nimport { addrecord } from '../actions/recordActions';\r\nclass AddCake extends Component {\r\n\r\n    \r\n  state = {\r\n    img_path:\"\",\r\n    rname:\"\",\r\n    discp:\"\",\r\n    price:\"\",\r\n    percent:\"\"\r\n  }\r\n//   componentDidMount(){\r\n//     this.props.fetchCake();\r\n//   }\r\n\r\n\r\n//   onClick = (e) => {\r\n//     // const categoryid = e.target.value;\r\n//     console.log(e.target.id)\r\n//     // this.props.fetchSubCategories({ id:categoryid });\r\n//     window.location.assign(\"/cake/\"+e.target.id)\r\n//   }\r\n\r\nonChange = (e)=>{\r\n    this.setState({[e.target.name]:e.target.value})\r\n    console.log(this.state.rname)\r\n}\r\n\r\nonSubmit=(e)=>{\r\n    e.preventDefault();\r\n    const record = {\r\n      img_path:this.state.img_path,\r\n      rname:this.state.rname,\r\n      discp:this.state.discp,\r\n      price:this.state.price,\r\n      percent:this.state.percent,\r\n    };\r\n    console.log(record)\r\n    this.props.addrecord(record)\r\n}\r\n\r\n  render() {\r\n\r\n    // const cakeItems = this.props.cakes.map(({ _id, img_path, name, discp, price, percent }) => (\r\n    //   <div className=\"box\" id={_id} onClick={this.onClick}>\r\n    //       <img src = {img_path} alt = \"hi\" id={_id} onClick={this.onClick}></img>\r\n    //       <h5>{name}</h5>\r\n    //       <p>{discp}</p>\r\n    //       <div id=\"btm\">\r\n    //         <div id=\"pl\">{price}</div>\r\n    //         <div id=\"pr\">{percent}</div>\r\n    //       </div>\r\n    //   </div>\r\n    // ));\r\n      \r\n      return (\r\n      <div>\r\n          <center>\r\n              <form method=\"post\" onSubmit = {this.onSubmit}>\r\n                  <input name=\"img_path\" type=\"text\" onChange = {this.onChange} placeholder=\"img_path\"></input>\r\n                  <input name=\"rname\" type=\"text\" onChange = {this.onChange} placeholder=\"rname\"></input>\r\n                  <input name=\"discp\" type=\"text\" onChange = {this.onChange} placeholder=\"discp\"></input>\r\n                  <input name=\"price\" type=\"text\" onChange = {this.onChange} placeholder=\"price\"></input>\r\n                  <input name=\"percent\" type=\"text\" onChange = {this.onChange} placeholder=\"percent\"></input>\r\n                  <input type=\"submit\" ></input>\r\n              </form>\r\n          </center>\r\n        \r\n  \r\n      {/* <footer>\r\n        <p>About us</p>\r\n      </footer> */}\r\n  \r\n  \r\n        </div>\r\n      )\r\n    \r\n}\r\n}\r\n\r\nconst mapStateToProps=state=>({\r\n    // cakes:state.categories.cakes,\r\n    // cakeLoading:state.categories.cakeLoading,\r\n    // auth:state.auth\r\n    // newPost:state.post.item\r\n});\r\n\r\nexport default connect(mapStateToProps, {addrecord} )(AddCake);\r\n// export default AddCake;\r\n","import { ADD_RECORD } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const addrecord = (record) => dispatch =>{\r\n    dispatch({ type:ADD_RECORD })\r\n    axios({\r\n        method:'post',\r\n        url:'/api/addrecord',\r\n        data: record\r\n    }).then(res => {\r\n        console.log(res.data)\r\n    })\r\n\r\n    //   .then(cakes => {\r\n    //         dispatch({ type:CAKE_LOADED })\r\n    //         dispatch({\r\n    //             type:FETCH_CAKE,\r\n    //             payload:cakes.data\r\n    //         })\r\n    //   })\r\n      \r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter,Route, Switch } from 'react-router-dom';\r\nimport Cakes from '../Cakes';\r\nimport Cake from '../category/Cake';\r\nimport Roles from '../Roles';\r\nimport Role from '../category/Role';\r\nimport Cookies from '../Cookies';\r\nimport Cookie from '../category/Cookie';\r\nimport AddCake from '../AddCake';\r\n// import '../../App.css';\r\n// import {connect} from 'react-redux';\r\n\r\nclass Dashboard extends Component {\r\n \r\n\r\n  render() {\r\n\r\n      return (\r\n        <div>\r\n            {/* <Header/> */}\r\n                <BrowserRouter>\r\n                  <Switch>\r\n                    <Route exact path=\"/\">\r\n                      <Cakes/>\r\n                    </Route>\r\n                    <Route exact path=\"/cookies\">\r\n                      <Cookies/>\r\n                    </Route>\r\n                    <Route exact path=\"/roles\">\r\n                      <Roles/>\r\n                    </Route>\r\n                    <Route path=\"/cake/:id\" component = {Cake} />\r\n                    <Route exact path=\"/roles\">\r\n                      <Roles/>\r\n                    </Route>\r\n                    <Route path=\"/role/:id\" component = {Role} />\r\n                    <Route exact path=\"/cookies\">\r\n                      <Cookies/>\r\n                    </Route>\r\n                    <Route path=\"/cookie/:id\" component = {Cookie} />\r\n\r\n                    <Route path=\"/addrecord\" component = {AddCake} />\r\n                    {/* <Route path=\"/cake/:id\" component = {Subcategories} />\r\n                    <Route path=\"/subcategory/:id\" component = {Products} />\r\n                    <Route path=\"/logout\" component = {Logout} />\r\n                    <Route path=\"/product/:id\" component = {Product} /> */}\r\n                    {/* <Route path=\"/login\">\r\n                      <Login />\r\n                    </Route>\r\n                    <Route path=\"/cart\">\r\n                      <Cart />\r\n                    </Route> */}\r\n                  </Switch> \r\n                </BrowserRouter>\r\n        </div>\r\n      )\r\n    \r\n    }\r\n}\r\n\r\n// const mapStateToProps=state=>({\r\n//     // posts:state.post.items,\r\n//     // postLoading:state.post.postLoading,\r\n//     auth:state.auth\r\n// });\r\n\r\n// export default connect(mapStateToProps)(Dashboard);\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/header.css'\r\n\r\nclass Footer extends Component {\r\n\r\n  render() {\r\n\r\n      return (\r\n        <div>\r\n            <footer>\r\n                <h3>Click on below</h3>\r\n                <h4>\r\n                    <a href=\"/\">1-Cakes</a>\r\n                </h4>\r\n                <h4>\r\n                    <a href=\"/cookies\">2-Cookies</a>\r\n                </h4>\r\n                <h4>\r\n                    <a href=\"/roles\">3-Rolls</a>\r\n                </h4>\r\n                <img src=\"/footer.jfif\" alt=\"hii\"/>\r\n                <p>Alex Web Deisgn, Copyright &copy; 2021</p>\r\n\t        </footer>\r\n        </div>      \r\n                \r\n    )\r\n    \r\n    }\r\n}\r\n\r\n// const mapStateToProps=state=>({\r\n//     // posts:state.post.items,\r\n//     // postLoading:state.post.postLoading,\r\n//     auth:state.auth\r\n// });\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Header from './components/dashboard/Header';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Footer from './components/dashboard/Footer';\n\nclass App extends Component {\n  // componentDidMount(){\n  //   store.dispatch(loadUser())\n  // }\n  \n  render() {\n    return (\n      <Provider store={store}>\n            <div className=\"App\">\n              <Header/>\n              <Dashboard/>\n              <Footer/>\n            </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}